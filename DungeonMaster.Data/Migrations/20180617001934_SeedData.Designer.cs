// <auto-generated />
using System;
using DungeonMaster.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DungeonMaster.Data.Migrations
{
    [DbContext(typeof(DungeonMasterDevContext))]
    [Migration("20180617001934_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DungeonMaster.Data.Models.AbilityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("AbilityType");

                    b.HasData(
                        new { Id = 1, Name = "Strength" },
                        new { Id = 2, Name = "Dexterity" },
                        new { Id = 3, Name = "Intelligence" },
                        new { Id = 4, Name = "Wisdom" },
                        new { Id = 5, Name = "Charisma" },
                        new { Id = 6, Name = "Constitution" }
                    );
                });

            modelBuilder.Entity("DungeonMaster.Data.Models.Background", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Background");

                    b.HasData(
                        new { Id = 1, Description = "extrovert boi", Name = "Charlatan" },
                        new { Id = 2, Description = "outlaw boi", Name = "Criminal" },
                        new { Id = 3, Description = "performer boi", Name = "Entertainer" },
                        new { Id = 4, Description = "legendary boi", Name = "folk Hero" },
                        new { Id = 5, Description = "professional boi", Name = "Guild Artisan" },
                        new { Id = 6, Description = "introvert boi", Name = "Hermit" },
                        new { Id = 7, Description = "bougie boi", Name = "Noble" },
                        new { Id = 8, Description = "amish boi", Name = "Outlander" },
                        new { Id = 9, Description = "book boi", Name = "Sage" },
                        new { Id = 10, Description = "water boi", Name = "Sailor" },
                        new { Id = 11, Description = "army boi", Name = "Soldier" },
                        new { Id = 12, Description = "orphan boi", Name = "Urchin" }
                    );
                });

            modelBuilder.Entity("DungeonMaster.Data.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Age");

                    b.Property<int>("BackgroundId")
                        .HasColumnName("Background_Id");

                    b.Property<string>("CharacterName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<decimal?>("Copper")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<decimal?>("Electrum")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<decimal?>("Gold")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<int?>("Height");

                    b.Property<int>("Level");

                    b.Property<decimal?>("Platinum")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("RaceId")
                        .HasColumnName("Race_Id");

                    b.Property<decimal?>("Silver")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<int?>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("BackgroundId");

                    b.HasIndex("RaceId");

                    b.ToTable("Character");
                });

            modelBuilder.Entity("DungeonMaster.Data.Models.CharacterAbilityScore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AbilityTypeId")
                        .HasColumnName("AbilityType_Id");

                    b.Property<int>("CharacterId")
                        .HasColumnName("Character_Id");

                    b.Property<int>("Score");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("Character_AbilityScore");
                });

            modelBuilder.Entity("DungeonMaster.Data.Models.Dndclass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CharacterId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<int>("HitDieSize")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("ParentClassId")
                        .HasColumnName("ParentClass_Id");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("ParentClassId");

                    b.ToTable("DNDClass");

                    b.HasData(
                        new { Id = 1, Description = "Dumb bois", HitDieSize = 12, Name = "Barbarian" },
                        new { Id = 2, Description = "Dumb Nature bois", HitDieSize = 12, Name = "Path of the Totem Warrior Barbarian", ParentClassId = 1 },
                        new { Id = 3, Description = "Dumb Grumpy bois", HitDieSize = 12, Name = "Path of the Berserker Barbarian", ParentClassId = 1 },
                        new { Id = 4, Description = "Fancy bois", HitDieSize = 8, Name = "Bard" },
                        new { Id = 5, Description = "Fancy Smart bois", HitDieSize = 8, Name = "College of Lore Bard", ParentClassId = 4 },
                        new { Id = 6, Description = "Fancy Theatric bois", HitDieSize = 8, Name = "College of Valor Bard", ParentClassId = 4 },
                        new { Id = 7, Description = "Holy bois", HitDieSize = 8, Name = "Cleric" },
                        new { Id = 8, Description = "Holy bois", HitDieSize = 8, Name = "Life Domain Cleric", ParentClassId = 7 },
                        new { Id = 9, Description = "Holy bois", HitDieSize = 8, Name = "Light Domain Cleric", ParentClassId = 7 },
                        new { Id = 10, Description = "Holy bois", HitDieSize = 8, Name = "Nature Domain Cleric", ParentClassId = 7 },
                        new { Id = 11, Description = "Holy bois", HitDieSize = 8, Name = "Tempest Domain Cleric", ParentClassId = 7 },
                        new { Id = 12, Description = "Holy bois", HitDieSize = 8, Name = "Trickery Domain Cleric", ParentClassId = 7 },
                        new { Id = 13, Description = "Holy bois", HitDieSize = 8, Name = "War Domain Cleric", ParentClassId = 7 },
                        new { Id = 14, Description = "Hippy bois", HitDieSize = 8, Name = "Druid" },
                        new { Id = 15, Description = "Hippy bois", HitDieSize = 8, Name = "Circle of the Land Druid", ParentClassId = 14 },
                        new { Id = 16, Description = "Hippy bois", HitDieSize = 8, Name = "Circle of the Moon Druid", ParentClassId = 14 },
                        new { Id = 17, Description = "Pokie bois", HitDieSize = 10, Name = "Fighter" },
                        new { Id = 18, Description = "Strong Pokie bois", HitDieSize = 10, Name = "Champion Fighter", ParentClassId = 17 },
                        new { Id = 19, Description = "Versatile Pokie bois", HitDieSize = 10, Name = "Battle Master Fighter", ParentClassId = 17 },
                        new { Id = 20, Description = "Magical Pokie bois", HitDieSize = 10, Name = "Eldritch Fighter", ParentClassId = 17 },
                        new { Id = 21, Description = "Calm bois", HitDieSize = 8, Name = "Monk" },
                        new { Id = 22, Description = "Calm bois", HitDieSize = 8, Name = "Way of the Open Hand Monk", ParentClassId = 21 },
                        new { Id = 23, Description = "Calm bois", HitDieSize = 8, Name = "Way of the Shadow Monk", ParentClassId = 21 },
                        new { Id = 24, Description = "Calm bois", HitDieSize = 8, Name = "Way of the Four Elements Monk", ParentClassId = 21 },
                        new { Id = 25, Description = "Crusader bois", HitDieSize = 10, Name = "Paladin" },
                        new { Id = 26, Description = "Crusader bois", HitDieSize = 10, Name = "Oath of Devotion Paladin", ParentClassId = 25 },
                        new { Id = 27, Description = "Crusader bois", HitDieSize = 10, Name = "Oath of The Ancients Paladin", ParentClassId = 25 },
                        new { Id = 28, Description = "Crusader bois", HitDieSize = 10, Name = "Oath of Vengeance Paladin", ParentClassId = 25 },
                        new { Id = 29, Description = "Arrow bois", HitDieSize = 10, Name = "Ranger" },
                        new { Id = 30, Description = "Arrow bois", HitDieSize = 10, Name = "Hunger Ranger", ParentClassId = 29 },
                        new { Id = 31, Description = "Arrow bois", HitDieSize = 10, Name = "Beast Master Ranger", ParentClassId = 29 },
                        new { Id = 32, Description = "Sneaky bois", HitDieSize = 8, Name = "Rogue" },
                        new { Id = 33, Description = "Sneaky bois", HitDieSize = 8, Name = "Thief Rogue", ParentClassId = 32 },
                        new { Id = 34, Description = "Sneaky bois", HitDieSize = 8, Name = "Assassin Rogue", ParentClassId = 32 },
                        new { Id = 35, Description = "Magical Sneaky bois", HitDieSize = 8, Name = "Arcane Trickster Rogue", ParentClassId = 32 },
                        new { Id = 36, Description = "Magical bois", HitDieSize = 6, Name = "Sorcerer" },
                        new { Id = 37, Description = "Magical bois", HitDieSize = 6, Name = "Draconic Bloodline Sorcerer", ParentClassId = 36 },
                        new { Id = 38, Description = "Magical bois", HitDieSize = 6, Name = "Wild Magic Sorcerer", ParentClassId = 36 },
                        new { Id = 39, Description = "Grumpy Magic bois", HitDieSize = 8, Name = "Warlock" },
                        new { Id = 40, Description = "Grumpy Magic bois", HitDieSize = 8, Name = "Pact of the Chain Warlock", ParentClassId = 39 },
                        new { Id = 41, Description = "Grumpy Magic bois", HitDieSize = 8, Name = "Pact of the Blade Warlock", ParentClassId = 39 },
                        new { Id = 42, Description = "Grumpy Magic bois", HitDieSize = 8, Name = "Pact of the Tome Warlock", ParentClassId = 39 },
                        new { Id = 43, Description = "Xtra Magic bois", HitDieSize = 6, Name = "Wizard" },
                        new { Id = 44, Description = "Xtra Magic bois", HitDieSize = 6, Name = "Abjuration Wizard", ParentClassId = 43 },
                        new { Id = 45, Description = "Xtra Magic bois", HitDieSize = 6, Name = "Conjuration Wizard", ParentClassId = 43 },
                        new { Id = 46, Description = "Xtra Magic bois", HitDieSize = 6, Name = "Divination Wizard", ParentClassId = 43 },
                        new { Id = 47, Description = "Xtra Magic bois", HitDieSize = 6, Name = "Enchantment Wizard", ParentClassId = 43 },
                        new { Id = 48, Description = "Xtra Magic bois", HitDieSize = 6, Name = "Evocation Wizard", ParentClassId = 43 },
                        new { Id = 49, Description = "Xtra Magic bois", HitDieSize = 6, Name = "Illusion Wizard", ParentClassId = 43 },
                        new { Id = 50, Description = "Xtra Magic bois", HitDieSize = 6, Name = "Necromancy Wizard", ParentClassId = 43 },
                        new { Id = 51, Description = "Xtra Magic bois", HitDieSize = 6, Name = "Transmutation Wizard", ParentClassId = 43 }
                    );
                });

            modelBuilder.Entity("DungeonMaster.Data.Models.Dndskill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AbilityTypeId")
                        .HasColumnName("AbilityType_Id");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("AbilityTypeId");

                    b.ToTable("DNDSkill");

                    b.HasData(
                        new { Id = 1, AbilityTypeId = 1, Name = "Athletics" },
                        new { Id = 2, AbilityTypeId = 2, Name = "Acrobatic" },
                        new { Id = 3, AbilityTypeId = 2, Name = "Sleight of Hand" },
                        new { Id = 4, AbilityTypeId = 2, Name = "Stealth" },
                        new { Id = 5, AbilityTypeId = 3, Name = "Arcana" },
                        new { Id = 6, AbilityTypeId = 3, Name = "History" },
                        new { Id = 7, AbilityTypeId = 3, Name = "Investigation" },
                        new { Id = 8, AbilityTypeId = 3, Name = "Nature" },
                        new { Id = 9, AbilityTypeId = 3, Name = "Religion" },
                        new { Id = 10, AbilityTypeId = 4, Name = "Animal Handling" },
                        new { Id = 11, AbilityTypeId = 4, Name = "Insight" },
                        new { Id = 12, AbilityTypeId = 4, Name = "Medicine" },
                        new { Id = 13, AbilityTypeId = 4, Name = "Perception" },
                        new { Id = 14, AbilityTypeId = 4, Name = "Survival" },
                        new { Id = 15, AbilityTypeId = 5, Name = "Deception" },
                        new { Id = 16, AbilityTypeId = 5, Name = "Intimidation" },
                        new { Id = 17, AbilityTypeId = 5, Name = "Performace" },
                        new { Id = 18, AbilityTypeId = 5, Name = "Persuasion" }
                    );
                });

            modelBuilder.Entity("DungeonMaster.Data.Models.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<int>("FeatureTypeId")
                        .HasColumnName("FeatureType_Id");

                    b.Property<string>("Summary")
                        .HasColumnType("ntext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .HasName("IX_Feature");

                    b.ToTable("Feature");
                });

            modelBuilder.Entity("DungeonMaster.Data.Models.Proficiency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SavingThrowTypeId")
                        .HasColumnName("SavingThrowType_Id");

                    b.Property<int>("SkillTypeId")
                        .HasColumnName("SkillType_Id");

                    b.HasKey("Id");

                    b.HasIndex("SavingThrowTypeId");

                    b.ToTable("Proficiency");
                });

            modelBuilder.Entity("DungeonMaster.Data.Models.Race", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("BaseSpeed");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("ParentRaceId")
                        .HasColumnName("ParentRace_Id");

                    b.Property<string>("Size");

                    b.Property<int?>("SubRaceTypeId")
                        .HasColumnName("SubRaceType_Id");

                    b.HasKey("Id");

                    b.HasIndex("ParentRaceId");

                    b.ToTable("Race");

                    b.HasData(
                        new { Id = 1, BaseSpeed = (short)25, Description = "little thicc bois", Name = "Dwarf", Size = "small" },
                        new { Id = 2, BaseSpeed = (short)25, Description = "little thicc bois", Name = "Hill Dwarf", ParentRaceId = 1, Size = "small" },
                        new { Id = 3, BaseSpeed = (short)25, Description = "little thicc bois", Name = "Mountain Dwarf", ParentRaceId = 1, Size = "small" },
                        new { Id = 4, BaseSpeed = (short)30, Description = "tall pointy bois", Name = "Elf", Size = "medium" },
                        new { Id = 5, BaseSpeed = (short)30, Description = "tall bougie bois", Name = "High Elf", ParentRaceId = 4, Size = "medium" },
                        new { Id = 6, BaseSpeed = (short)35, Description = "tall nature bois", Name = "Wood Elf", ParentRaceId = 4, Size = "medium" },
                        new { Id = 7, BaseSpeed = (short)30, Description = "tall emo bois", Name = "Dark Elf (Drow)", ParentRaceId = 4, Size = "medium" },
                        new { Id = 8, BaseSpeed = (short)25, Description = "little happy bois", Name = "Halfling", Size = "small" },
                        new { Id = 9, BaseSpeed = (short)25, Description = "little sneaky bois", Name = "Lightfoot Halfling", ParentRaceId = 8, Size = "small" },
                        new { Id = 10, BaseSpeed = (short)25, Description = "little hardy bois", Name = "Stout Halfling", ParentRaceId = 8, Size = "small" },
                        new { Id = 11, BaseSpeed = (short)30, Description = "boring bois", Name = "Human", Size = "medium" },
                        new { Id = 12, BaseSpeed = (short)30, Description = "special boring bois", Name = "Variant Human", ParentRaceId = 11, Size = "medium" },
                        new { Id = 13, BaseSpeed = (short)30, Description = "dragon bois", Name = "Dragonborn", Size = "medium" },
                        new { Id = 14, BaseSpeed = (short)30, Description = "black dragon bois", Name = "Black Dragonborn", ParentRaceId = 13, Size = "medium" },
                        new { Id = 15, BaseSpeed = (short)30, Description = "blue dragon bois", Name = "Blue Dragonborn", ParentRaceId = 13, Size = "medium" },
                        new { Id = 16, BaseSpeed = (short)30, Description = "brass dragon bois", Name = "Brass Dragonborn", ParentRaceId = 13, Size = "medium" },
                        new { Id = 17, BaseSpeed = (short)30, Description = "bronze dragon bois", Name = "Bronze Dragonborn", ParentRaceId = 13, Size = "medium" },
                        new { Id = 18, BaseSpeed = (short)30, Description = "copper dragon bois", Name = "Copper Dragonborn", ParentRaceId = 13, Size = "medium" },
                        new { Id = 19, BaseSpeed = (short)30, Description = "gold dragon bois", Name = "Gold Dragonborn", ParentRaceId = 13, Size = "medium" },
                        new { Id = 20, BaseSpeed = (short)30, Description = "green dragon bois", Name = "Green Dragonborn", ParentRaceId = 13, Size = "medium" },
                        new { Id = 21, BaseSpeed = (short)30, Description = "red dragon bois", Name = "Red Dragonborn", ParentRaceId = 13, Size = "medium" },
                        new { Id = 22, BaseSpeed = (short)30, Description = "silver dragon bois", Name = "Silver Dragonborn", ParentRaceId = 13, Size = "medium" },
                        new { Id = 23, BaseSpeed = (short)30, Description = "white dragon bois", Name = "White Dragonborn", ParentRaceId = 13, Size = "medium" },
                        new { Id = 24, BaseSpeed = (short)30, Description = "stupid lil bois", Name = "Gnome", Size = "small" },
                        new { Id = 25, BaseSpeed = (short)30, Description = "stupid lil nature bois", Name = "Forest Gnome", ParentRaceId = 24, Size = "small" },
                        new { Id = 26, BaseSpeed = (short)30, Description = "stupid lil hard bois", Name = "Rock Gnome", ParentRaceId = 24, Size = "small" },
                        new { Id = 27, BaseSpeed = (short)30, Description = "half and half bois", Name = "Half-Elf", Size = "medium" },
                        new { Id = 28, BaseSpeed = (short)30, Description = "little tusky bois", Name = "Half-Orc", Size = "medium" },
                        new { Id = 29, BaseSpeed = (short)30, Description = "devil bois", Name = "Tiefling", Size = "medium" }
                    );
                });

            modelBuilder.Entity("DungeonMaster.Data.Models.Character", b =>
                {
                    b.HasOne("DungeonMaster.Data.Models.Background", "Background")
                        .WithMany("Character")
                        .HasForeignKey("BackgroundId")
                        .HasConstraintName("FK_Character_Background");

                    b.HasOne("DungeonMaster.Data.Models.Race", "Race")
                        .WithMany("Character")
                        .HasForeignKey("RaceId")
                        .HasConstraintName("FK_Character_Race");
                });

            modelBuilder.Entity("DungeonMaster.Data.Models.CharacterAbilityScore", b =>
                {
                    b.HasOne("DungeonMaster.Data.Models.Character")
                        .WithMany("AbilityScores")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DungeonMaster.Data.Models.AbilityType", "AbilityType")
                        .WithOne("CharacterAbilityScore")
                        .HasForeignKey("DungeonMaster.Data.Models.CharacterAbilityScore", "Id")
                        .HasConstraintName("FK_Character_AbilityScore_AbilityType");
                });

            modelBuilder.Entity("DungeonMaster.Data.Models.Dndclass", b =>
                {
                    b.HasOne("DungeonMaster.Data.Models.Character")
                        .WithMany("Classes")
                        .HasForeignKey("CharacterId");

                    b.HasOne("DungeonMaster.Data.Models.Dndclass", "ParentClass")
                        .WithMany("ChildClasses")
                        .HasForeignKey("ParentClassId")
                        .HasConstraintName("FK_Class_ParentClass");
                });

            modelBuilder.Entity("DungeonMaster.Data.Models.Dndskill", b =>
                {
                    b.HasOne("DungeonMaster.Data.Models.AbilityType", "AbilityType")
                        .WithMany("Dndskill")
                        .HasForeignKey("AbilityTypeId")
                        .HasConstraintName("FK_DNDSkill_AbilityType");
                });

            modelBuilder.Entity("DungeonMaster.Data.Models.Proficiency", b =>
                {
                    b.HasOne("DungeonMaster.Data.Models.AbilityType", "SavingThrowType")
                        .WithMany("Proficiency")
                        .HasForeignKey("SavingThrowTypeId")
                        .HasConstraintName("FK_Proficiency_SavingThrow");
                });

            modelBuilder.Entity("DungeonMaster.Data.Models.Race", b =>
                {
                    b.HasOne("DungeonMaster.Data.Models.Race", "ParentRace")
                        .WithMany("ChildRaces")
                        .HasForeignKey("ParentRaceId")
                        .HasConstraintName("FK_Race_ParentRace");
                });
#pragma warning restore 612, 618
        }
    }
}
